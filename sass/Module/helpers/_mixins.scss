@mixin responsive-columns($suffix: ''){

    @for $i from 1 through $columns{
    
        @if $i != 0{

            .col#{$suffix}-#{$i}{

                width: $i / $columns * 100%; 
            }
        }

        .col#{$suffix}-center{
            margin: 0 auto;
            float: none;
        }

        .col#{$suffix}-push-#{$i}{
            left: $i / $columns * 100%;
        }

        .col#{$suffix}-offset-#{$i}{
            margin-left: $i / $columns * 100%;
        }

        .col#{$suffix}-pull-#{$i}{
            left: $i / $columns * 100%;
        }

    }
}

//Margin left && right
@mixin push-auto{
    margin: { 
        left: auto;
        right: auto;
    }
}

// ::before || ::after
@mixin pseudo($display: false, $pos: false, $content: '', $bgColor: false, $width: false, $height: false){
    content: $content;
    @if $display { display: $display; }
    @if $pos { position: $pos; }
    @if $bgColor { background-color: $bgColor; }
    @if $width { width: $width; }
    @if $height { height: $height; }
}

//Responsive ratio for img || bg img
@mixin responsive-ratio($x,$y, $pseudo: false){
    $padding: unquote( ( $y / $x ) * 100 + '%' );

    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } 
    @else {
        padding-top: $padding;
    }
}

//CSS triangles
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    
    @include pseudo($pos: $position);
    width: 0;
    height: 0;

    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } 
    @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } 
    @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } 
    @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

//Font styling
@mixin font-styling($family : false, $size: false, $colour: false, $weight: false,  $lh: false, $transform: false) {
    @if $family{ font-family: $family, Helvetica, Arial, sans-serif };
    @if $size { font-size: $size; }
    @if $colour { color: $colour; }
    @if $weight { font-weight: $weight; }
    @if $lh { line-height: $lh; }
    @if $transform{ text-transform: $transform; }
}

//Calculate font-size
@mixin font-size($size, $unit) {
	font-size: $size;
	font-size: calculateSize($size, $unit);
}

//Placeholder
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}
//Example
//input,  
//textarea {  
//    @include input-placeholder {
//        color: $grey;
//    }
//}

//Hardware
@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}

//Truncate
@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

//  ----- Support for IE 7-8-9 -----
// You will need to add conditional classes on your <html> element
@mixin forIE( $ieVersion ){
	.ie#{$ieVersion} & {
		@content;
	}
}

//Transition
@mixin transition( $values... ){
	@each $prefix in -webkit-, '' {
		#{$prefix}transition: $values;
	}
}

//Round corner
@mixin rounded-corner($arc) {
    -moz-border-radius: $arc;
    -webkit-border-radius: $arc;
    border-radius: $arc;  
}
